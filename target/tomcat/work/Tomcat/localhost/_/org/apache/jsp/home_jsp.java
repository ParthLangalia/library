/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2025-05-05 07:13:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Library Management - Home</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"bg-light\">\r\n");
      out.write("    <div class=\"container py-5\">\r\n");
      out.write("        <div class=\"text-center mb-4\">\r\n");
      out.write("            <h2>Library Management System</h2>\r\n");
      out.write("            <p class=\"lead\">Welcome <span id=\"userName\"></span> (<span id=\"userEmail\"></span>)</p>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-md-12 mb-4\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <div class=\"card-header\">\r\n");
      out.write("                        <h4>Search Books</h4>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                        <form id=\"searchForm\" action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/books/search\" method=\"post\">\r\n");
      out.write("                            <div class=\"row g-3\">\r\n");
      out.write("                                <div class=\"col-md-4\">\r\n");
      out.write("                                    <input type=\"text\" class=\"form-control\" name=\"title\" placeholder=\"Title\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-md-3\">\r\n");
      out.write("                                    <input type=\"text\" class=\"form-control\" name=\"author\" placeholder=\"Author\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-md-3\">\r\n");
      out.write("                                    <input type=\"text\" class=\"form-control\" name=\"genre\" placeholder=\"Genre\">\r\n");
      out.write("                                </div>\r\n");
      out.write("                                <div class=\"col-md-2\">\r\n");
      out.write("                                    <button type=\"submit\" class=\"btn btn-primary w-100\">Search</button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </form>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-md-12\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n");
      out.write("                        <h4>Books Currently Borrowed</h4>\r\n");
      out.write("                        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/books/userBooks\" class=\"btn btn-outline-primary\">View All Borrowed Books</a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                        <div id=\"borrowedBooks\" class=\"row\">\r\n");
      out.write("                            <!-- Borrowed books will be displayed here -->\r\n");
      out.write("                            <p class=\"text-center text-muted\">No books currently borrowed</p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Hidden user ID field to use with API calls -->\r\n");
      out.write("    <input type=\"hidden\" id=\"userId\" value=\"1\">\r\n");
      out.write("    \r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        // Simple script to get URL parameters\r\n");
      out.write("        function getParameterByName(name, url = window.location.href) {\r\n");
      out.write("            name = name.replace(/[\\[\\]]/g, '\\$&');\r\n");
      out.write("            var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n");
      out.write("                results = regex.exec(url);\r\n");
      out.write("            if (!results) return null;\r\n");
      out.write("            if (!results[2]) return '';\r\n");
      out.write("            return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Populate user info\r\n");
      out.write("        document.getElementById('userName').textContent = getParameterByName('name') || 'User';\r\n");
      out.write("        document.getElementById('userEmail').textContent = getParameterByName('email') || 'user@example.com';\r\n");
      out.write("        \r\n");
      out.write("        // Load borrowed books\r\n");
      out.write("        window.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("            const userId = document.getElementById('userId').value;\r\n");
      out.write("            \r\n");
      out.write("            // Make API call to get user's borrowed books\r\n");
      out.write("            fetch(`");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/books/userBooks?userId=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("`)\r\n");
      out.write("                .then(response => {\r\n");
      out.write("                    if (!response.ok) {\r\n");
      out.write("                        throw new Error('Network response was not ok');\r\n");
      out.write("                    }\r\n");
      out.write("                    // This would redirect to the user books page\r\n");
      out.write("                    // For now, we'll just note that it was called\r\n");
      out.write("                    console.log('Borrowed books API called');\r\n");
      out.write("                })\r\n");
      out.write("                .catch(error => {\r\n");
      out.write("                    console.error('Error fetching borrowed books:', error);\r\n");
      out.write("                });\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html> ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
